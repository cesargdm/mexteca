{"version":3,"sources":["src/utils/supabase.ts","src/screens/Listings.tsx","src/utils/index.ts","src/screens/Movie.tsx","src/screens/About.tsx","src/screens/Locations.tsx","src/navigation/index.tsx","App.tsx","src/assets/mexiquense.jpg"],"names":["client","createClient","localStorage","AsyncStorage","detectSessionInUrl","Notifications","handleNotification","a","async","shouldShowAlert","shouldPlaySound","shouldSetBadge","locale","es","now","startOfDay","Date","styles","StyleSheet","create","container","flex","backgroundColor","Listing","navigation","useNavigation","route","useRoute","permissionStatus","registerForPushNotifications","Device","existingStatus","status","finalStatus","alert","token","data","console","log","Platform","OS","name","importance","MAX","vibrationPattern","lightColor","registerForPushNotificationsAsync","then","from","insert","all","useState","selectedDate","setSelectedDate","error","loading","setState","width","useWindowDimensions","maxWidth","Math","min","numberOfColumns","round","posterWidth","useEffect","headerTitle","formatRelative","replace","trim","charAt","toUpperCase","slice","setOptions","headerRight","View","style","flexDirection","TouchableOpacity","padding","paddingRight","paddingLeft","borderRadius","marginRight","onPress","addDays","strokeWidth","height","display","alignItems","Text","fontSize","fontWeight","marginHorizontal","textAlign","fetchData","useCallback","select","eq","params","location","order","ascending","gte","toISOString","lte","endOfDay","Error","prev","length","justifyContent","color","opacity","granted","marginTop","alignContent","stroke","fill","marginLeft","FlatList","refreshControl","RefreshControl","onRefresh","refreshing","numColumns","renderItem","presentation","item","navigate","id","movie","title","posterUrl","paddingBottom","shadowColor","shadowOffset","shadowOpacity","shadowRadius","ImageBackground","borderWidth","borderColor","overflow","resizeMode","source","uri","intensity","tint","paddingHorizontal","room","isFreeEntry","formatInTimeZone","date","position","bottom","right","year","duration","classification","marginBottom","Array","tmdbRating","map","_","index","columnWrapperStyle","margin","contentInsetAdjustmentBehavior","ActivityIndicator","size","JSON","stringify","characteristicContainer","characteristicIcon","characteristic","classificationText","MovieScreen","movieId","single","ScrollView","automaticallyAdjustContentInsets","StatusBar","barStyle","SafeAreaView","edges","cache","top","left","paddingTop","director","description","paddingVertical","trailerUrl","javaScriptEnabled","AboutScreen","animated","Linking","openURL","marginVertical","LOCATIONS","image","require","address","LocationsScreen","Stack","createNativeStackNavigator","Navigator","initialRouteName","Screen","options","headerTintColor","headerLeft","component","headerBackTitleVisible","ListingsScreen","headerTransparent","headerBackTitle","goBack","Navigation","value","NavigationContainer","module","exports"],"mappings":"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","file":"static/js/app.18fc775a.chunk.js","sourcesContent":["import { createClient } from '@supabase/supabase-js'\nimport AsyncStorage from '@react-native-async-storage/async-storage'\n\nconst SUPABASE_ANON_KEY =\n  'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Inl6aGJla2hvbnN1aGFwdG14Y2trIiwicm9sZSI6ImFub24iLCJpYXQiOjE2NDQ0MjgzMzcsImV4cCI6MTk2MDAwNDMzN30.8ZNeKaJZsPvHs9UFYPT4AM2CB4LHyZIHh5pSPuuvXks'\nconst SUPABASE_PROJECT = 'https://yzhbekhonsuhaptmxckk.supabase.co'\n\nexport const client = createClient(SUPABASE_PROJECT, SUPABASE_ANON_KEY, {\n  localStorage: AsyncStorage as any,\n  detectSessionInUrl: false,\n})\n","import { useCallback, useEffect, useState } from 'react'\nimport {\n  Text,\n  View,\n  FlatList,\n  StyleSheet,\n  RefreshControl,\n  ImageBackground,\n  TouchableOpacity,\n  ActivityIndicator,\n  useWindowDimensions,\n} from 'react-native'\nimport { BlurView } from 'expo-blur'\nimport { useNavigation, useRoute } from '@react-navigation/native'\nimport { Star, ChevronLeft, ChevronRight } from 'react-native-feather'\nimport { formatInTimeZone } from 'date-fns-tz'\nimport { startOfDay, endOfDay } from 'date-fns/esm'\nimport { es } from 'date-fns/esm/locale'\n\nimport * as Notifications from 'expo-notifications'\nimport { Bell } from 'react-native-feather'\nimport { addDays, formatRelative } from 'date-fns'\n\nimport { registerForPushNotificationsAsync } from '../utils'\nimport { client } from '../utils/supabase'\n\nNotifications.setNotificationHandler({\n  handleNotification: async () => ({\n    shouldShowAlert: true,\n    shouldPlaySound: false,\n    shouldSetBadge: false,\n  }),\n})\n\nconst locale = es\nconst now = startOfDay(new Date())\n\nfunction Listing() {\n  const navigation = useNavigation<any>()\n  const route = useRoute()\n  const [permissionStatus] = Notifications.usePermissions()\n\n  function registerForPushNotifications() {\n    registerForPushNotificationsAsync().then((token) => {\n      if (!token) return\n      client\n        .from('notificationSettings')\n        .insert({ token, all: true })\n        .then(({ data }) => {\n          if (data) {\n            alert('Te avisaremos cuando se publiquen una nuevas funciones')\n          } else {\n            alert('Hubo un problema al registrarte')\n          }\n        })\n    })\n  }\n\n  const [selectedDate, setSelectedDate] = useState(now)\n  const [{ data, error, loading }, setState] = useState<any>({\n    data: null,\n    error: null,\n    loading: true,\n  })\n\n  let { width } = useWindowDimensions()\n  const maxWidth = Math.min(width, 800)\n  const numberOfColumns = Math.round(maxWidth / 200)\n  const posterWidth = maxWidth / numberOfColumns\n\n  useEffect(() => {\n    let headerTitle = formatRelative(selectedDate, now, {\n      locale,\n    })\n      .replace(/a las*/i, '')\n      .replace(/\\d+:\\d\\d$/i, '')\n      .replace(/^el/i, '')\n      .trim()\n    // capitalize header title\n    headerTitle = headerTitle.charAt(0).toUpperCase() + headerTitle.slice(1)\n\n    navigation.setOptions({\n      headerRight() {\n        return (\n          <View style={{ flexDirection: 'row' }}>\n            <TouchableOpacity\n              style={{\n                padding: 5,\n                paddingRight: 6,\n                paddingLeft: 4,\n                backgroundColor: 'rgba(0,0,0,0.1)',\n                borderRadius: '50%',\n                marginRight: 5,\n              }}\n              onPress={() => setSelectedDate(addDays(selectedDate, -1))}\n            >\n              <ChevronLeft strokeWidth={4} width={20} height={20} />\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={{\n                padding: 5,\n                paddingRight: 4,\n                paddingLeft: 6,\n                backgroundColor: 'rgba(0,0,0,0.1)',\n                borderRadius: '50%',\n              }}\n              onPress={() => setSelectedDate(addDays(selectedDate, 1))}\n            >\n              <ChevronRight strokeWidth={4} width={20} height={20} />\n            </TouchableOpacity>\n          </View>\n        )\n      },\n      headerTitle: () => (\n        <View\n          style={{\n            display: 'flex',\n            flexDirection: 'row',\n            alignItems: 'center',\n          }}\n        >\n          <TouchableOpacity onPress={() => setSelectedDate(now)}>\n            <Text\n              style={{\n                fontSize: 17,\n                fontWeight: '600',\n                marginHorizontal: 5,\n                width: 140,\n                textAlign: 'center',\n              }}\n            >\n              {headerTitle}\n            </Text>\n          </TouchableOpacity>\n        </View>\n      ),\n    })\n  }, [navigation, selectedDate])\n\n  const fetchData = useCallback(async () => {\n    setState({ error: null, data: null, loading: true })\n\n    try {\n      const { data, error } = await client\n        .from('presentations')\n        .select(\n          `\n            id,\n            date,\n            room,\n            isFreeEntry,\n            movie (\n              id,\n              title,\n              posterUrl,\n              duration,\n              tmdbRating,\n              year,\n              classification\n            )\n          `,\n        )\n        .eq('location', (route.params as any).location)\n        .order('date', { ascending: true })\n        .gte('date', selectedDate.toISOString())\n        .lte('date', endOfDay(selectedDate).toISOString())\n\n      if (error) {\n        console.log(error)\n        throw new Error('Could not get presentations')\n      }\n\n      setState({ data, loading: false, error })\n    } catch (error) {\n      console.log(error)\n      setState((prev: any) => ({ ...prev, loading: false, error }))\n    }\n  }, [selectedDate])\n\n  useEffect(() => {\n    fetchData()\n  }, [selectedDate])\n\n  function renderItem({ item: presentation }: any) {\n    return (\n      <TouchableOpacity\n        onPress={() =>\n          navigation.navigate('MovieScreen', {\n            id: presentation.movie.id,\n            title: presentation.movie.title,\n            posterUrl: presentation.movie.posterUrl,\n          })\n        }\n        style={{ width: posterWidth, padding: 10, paddingBottom: 20 }}\n      >\n        <View\n          style={{\n            shadowColor: '#000',\n            shadowOffset: { width: 0, height: 0 },\n            shadowOpacity: 0.2,\n            shadowRadius: 4,\n          }}\n        >\n          <ImageBackground\n            style={{\n              width: '100%',\n              height: posterWidth * 1.48,\n              borderRadius: 5,\n              borderWidth: 1,\n              borderColor: '#ddd',\n              overflow: 'hidden',\n            }}\n            resizeMode=\"cover\"\n            source={{ uri: presentation.movie.posterUrl }}\n          >\n            <BlurView\n              intensity={25}\n              tint=\"dark\"\n              style={{\n                padding: 5,\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Text\n                style={{\n                  fontSize: 10,\n                  borderRadius: 4,\n                  overflow: 'hidden',\n                  color: 'white',\n                  paddingHorizontal: 5,\n                  fontWeight: '700',\n                }}\n              >\n                Sala {presentation.room}\n              </Text>\n              <Text style={{ fontWeight: '900', color: 'white', fontSize: 10 }}>\n                {presentation.isFreeEntry ? 'Libre' : ''}\n              </Text>\n              <Text\n                style={{\n                  fontSize: 10,\n                  color: 'white',\n                  fontWeight: '700',\n                }}\n              >\n                {formatInTimeZone(\n                  presentation.date,\n                  'America/Mexico_City',\n                  'h:mm aaa',\n                )}\n              </Text>\n            </BlurView>\n            <Text\n              style={{\n                position: 'absolute',\n                bottom: 0,\n                right: 0,\n                fontWeight: '800',\n                opacity: 0.2,\n                fontSize: 8,\n              }}\n            >\n              {presentation.id}\n            </Text>\n          </ImageBackground>\n        </View>\n\n        <Text\n          style={{\n            marginTop: 5,\n            color: 'black',\n            width: '100%',\n            fontWeight: '700',\n            fontSize: 18,\n            textAlign: 'center',\n          }}\n        >\n          {presentation.movie.title ?? 'No title'}\n        </Text>\n        <Text\n          style={{\n            color: '#666',\n            textAlign: 'center',\n            fontSize: 13,\n            marginTop: 2.5,\n          }}\n        >\n          {presentation.movie.year} · {presentation.movie.duration} min ·{' '}\n          {presentation.movie.classification}\n        </Text>\n        <View\n          style={{\n            marginTop: 2.5,\n            display: 'flex',\n            flexDirection: 'row',\n            justifyContent: 'center',\n            marginBottom: 10,\n          }}\n        >\n          <View style={{ display: 'flex', flexDirection: 'row' }}>\n            {new Array(Math.round(presentation.movie.tmdbRating / 2))\n              .fill(null)\n              .map((_, index) => (\n                <Star\n                  key={index}\n                  width={12.5}\n                  height={12.5}\n                  stroke=\"none\"\n                  fill=\"gold\"\n                />\n              ))}\n          </View>\n        </View>\n      </TouchableOpacity>\n    )\n  }\n\n  if (!data) {\n    if (loading) {\n      return (\n        <View\n          style={[\n            styles.container,\n            { justifyContent: 'center', alignItems: 'center' },\n          ]}\n        >\n          <ActivityIndicator size=\"large\" />\n          <Text style={{ color: 'black', marginTop: 4, fontWeight: '800' }}>\n            Obteniendo cartelera\n          </Text>\n        </View>\n      )\n    }\n    return (\n      <View\n        style={[\n          styles.container,\n          { justifyContent: 'center', alignItems: 'center' },\n        ]}\n      >\n        <Text style={{ color: 'black', marginTop: 4, fontWeight: '800' }}>\n          Error\n          {JSON.stringify(error)}\n        </Text>\n      </View>\n    )\n  }\n\n  if (data.length === 0) {\n    return (\n      <View\n        style={[\n          styles.container,\n          { justifyContent: 'center', alignItems: 'center', padding: 20 },\n        ]}\n      >\n        <Text\n          style={{\n            color: 'black',\n            textAlign: 'center',\n            fontSize: 20,\n            fontWeight: '700',\n            opacity: 0.9,\n          }}\n        >\n          No hemos encontrado funciones para este día, intenta revisar después\n        </Text>\n        {!permissionStatus?.granted ? (\n          <TouchableOpacity onPress={() => registerForPushNotifications()}>\n            <Text style={{ marginTop: 30, opacity: 0.6, fontWeight: '600' }}>\n              Si quieres también podemos avisarte\n            </Text>\n            <View\n              style={{\n                display: 'flex',\n                flexDirection: 'row',\n                alignContent: 'center',\n                justifyContent: 'center',\n              }}\n            >\n              <Bell width={15} height={15} stroke=\"black\" fill=\"black\" />\n              <Text\n                style={{\n                  alignItems: 'center',\n                  fontWeight: '800',\n                  color: 'black',\n                  marginLeft: 5,\n                }}\n              >\n                recibir notificaciones\n              </Text>\n            </View>\n          </TouchableOpacity>\n        ) : null}\n      </View>\n    )\n  }\n\n  return (\n    <FlatList\n      refreshControl={\n        <RefreshControl onRefresh={() => fetchData()} refreshing={false} />\n      }\n      key={numberOfColumns}\n      numColumns={numberOfColumns}\n      data={data}\n      renderItem={renderItem}\n      columnWrapperStyle={{\n        maxWidth: 800,\n        margin: 0,\n        marginHorizontal: 'auto',\n      }}\n      contentInsetAdjustmentBehavior=\"automatic\"\n      style={styles.container}\n    />\n  )\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n  },\n})\n\nexport default Listing\n","import { Platform } from 'react-native'\nimport * as Notifications from 'expo-notifications'\nimport * as Device from 'expo-device'\n\nexport async function registerForPushNotificationsAsync() {\n  let token\n  if (Device.isDevice) {\n    const { status: existingStatus } = await Notifications.getPermissionsAsync()\n    let finalStatus = existingStatus\n    if (existingStatus !== 'granted') {\n      const { status } = await Notifications.requestPermissionsAsync()\n      finalStatus = status\n    }\n    if (finalStatus !== 'granted') {\n      alert('Failed to get push token for push notification!')\n      return\n    }\n    token = (await Notifications.getExpoPushTokenAsync()).data\n    console.log(token)\n  } else {\n    return alert('Must use physical device for Push Notifications')\n  }\n\n  if (Platform.OS === 'android') {\n    Notifications.setNotificationChannelAsync('default', {\n      name: 'default',\n      importance: Notifications.AndroidImportance.MAX,\n      vibrationPattern: [0, 250, 250, 250],\n      lightColor: '#FF231F7C',\n    })\n  }\n\n  return token\n}\n","import { useEffect, useState } from 'react'\nimport {\n  ScrollView,\n  Text,\n  ImageBackground,\n  View,\n  StatusBar,\n  StyleSheet,\n} from 'react-native'\nimport { Clock, UserCheck, Star, Film } from 'react-native-feather'\nimport { SafeAreaView } from 'react-native-safe-area-context'\nimport { WebView } from 'react-native-webview'\nimport { useRoute } from '@react-navigation/native'\n\nimport { client } from '../utils/supabase'\n\nfunction MovieScreen() {\n  const route = useRoute()\n  const movieId = (route.params as any)?.id\n  const [{ data }, setState] = useState<any>({\n    data: {\n      title: (route.params as any)?.title,\n      posterUrl: (route.params as any)?.posterUrl,\n    },\n    error: null,\n    loading: true,\n  })\n\n  useEffect(() => {\n    async function fetchData() {\n      setState({ error: null, data: null, loading: true })\n\n      try {\n        const { data, error } = await client\n          .from('movies')\n          .select(\n            `\n            id,\n            title,\n            posterUrl,\n            duration,\n            tmdbRating,\n            year,\n            classification,\n            description,\n            trailerUrl,\n            director (\n                name\n            )\n            `,\n          )\n          .eq('id', movieId)\n          .single()\n\n        if (error) {\n          console.log(error)\n          throw new Error('Could not get presentations')\n        }\n\n        setState({ data, loading: false, error })\n      } catch (error) {\n        console.log(error)\n        setState((prev: any) => ({ ...prev, loading: false, error }))\n      }\n    }\n\n    fetchData()\n  }, [])\n\n  return (\n    <ScrollView automaticallyAdjustContentInsets>\n      <StatusBar barStyle=\"light-content\" />\n      <SafeAreaView edges={['bottom', 'left', 'right']}>\n        <ImageBackground\n          style={{ width: '100%', height: 250, position: 'relative' }}\n          source={{ uri: data?.posterUrl, cache: 'force-cache' }}\n        >\n          <View\n            style={{\n              position: 'absolute',\n              top: 0,\n              left: 0,\n              width: '100%',\n              height: '100%',\n              backgroundColor: 'rgba(0,0,0,0.4)',\n              paddingTop: 50,\n            }}\n          />\n          <Text\n            style={{\n              position: 'absolute',\n              bottom: 0,\n              left: 0,\n              color: 'white',\n              fontSize: 35,\n              fontWeight: '600',\n              padding: 20,\n            }}\n          >\n            {data?.title}\n          </Text>\n        </ImageBackground>\n        <View style={styles.characteristicContainer}>\n          {data?.director?.name && (\n            <View style={styles.characteristic}>\n              <Film color=\"black\" style={styles.characteristicIcon} />\n              <Text\n                style={{\n                  fontWeight: '700',\n                  maxWidth: 80,\n                  textAlign: 'center',\n                }}\n              >\n                {data.director.name}\n              </Text>\n            </View>\n          )}\n          <View style={styles.characteristic}>\n            <Clock color=\"black\" style={styles.characteristicIcon} />\n            <Text\n              style={{ color: 'black', textAlign: 'center', fontWeight: '700' }}\n            >\n              {data?.duration} min\n            </Text>\n          </View>\n          <View style={styles.characteristic}>\n            <UserCheck color=\"black\" style={styles.characteristicIcon} />\n            <Text style={styles.classificationText}>\n              {data?.classification}\n            </Text>\n          </View>\n          {data?.tmdbRating ? (\n            <View style={styles.characteristic}>\n              <Star color=\"black\" style={styles.characteristicIcon} />\n              <Text style={{ fontWeight: '700' }}>{data?.tmdbRating}</Text>\n            </View>\n          ) : null}\n        </View>\n\n        {data?.description ? (\n          <View style={{ padding: 20 }}>\n            <Text\n              style={{\n                fontWeight: '700',\n                color: 'black',\n                paddingVertical: 10,\n                fontSize: 18,\n              }}\n            >\n              Description\n            </Text>\n            <Text style={{ color: 'black' }}>{data.description}</Text>\n          </View>\n        ) : null}\n\n        {data?.trailerUrl ? (\n          <View style={{ padding: 20 }}>\n            <Text\n              style={{\n                fontWeight: '700',\n                color: 'black',\n                paddingVertical: 10,\n                fontSize: 18,\n              }}\n            >\n              Trailer\n            </Text>\n            <WebView\n              style={{ flex: 1, width: '100%', height: 200 }}\n              javaScriptEnabled={true}\n              source={{ uri: data.trailerUrl }}\n            />\n          </View>\n        ) : null}\n        {/* <View style={{ marginTop: 10 }}>\n          <Text\n            style={{\n              fontWeight: '700',\n              color: 'black',\n              padding: 10,\n              fontSize: 18,\n            }}\n          >\n            Presentaciones\n          </Text>\n          <Text style={{ color: 'red' }}>{JSON.stringify(all, null, 10)}</Text>\n          <View>\n            <View\n              style={{\n                borderTopWidth: 1,\n                borderColor: '#ddd',\n                padding: 10,\n                display: 'flex',\n                flexDirection: 'row',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Text>Jueves 18, 10:00AM</Text>\n              <Text>Sala 1</Text>\n            </View>\n          </View>\n        </View> */}\n      </SafeAreaView>\n    </ScrollView>\n  )\n}\n\nconst styles = StyleSheet.create({\n  characteristicContainer: {\n    padding: 20,\n    display: 'flex',\n    flexDirection: 'row',\n    justifyContent: 'space-evenly',\n    alignContent: 'flex-start',\n    alignItems: 'flex-start',\n  },\n  characteristicIcon: { marginBottom: 5 },\n  characteristic: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  classificationText: {\n    color: 'white',\n    fontWeight: '700',\n    fontSize: 12,\n    textAlign: 'center',\n    backgroundColor: 'black',\n    padding: 1,\n    paddingHorizontal: 10,\n    borderRadius: 6,\n    overflow: 'hidden',\n  },\n})\n\nexport default MovieScreen\n","import { View, Text, TouchableOpacity, StatusBar, Linking } from 'react-native'\nimport { Github, Coffee } from 'react-native-feather'\n\nfunction AboutScreen() {\n  return (\n    <View style={{ flex: 1, padding: 20, backgroundColor: 'white' }}>\n      <StatusBar animated barStyle=\"light-content\" />\n      <Text\n        style={{\n          fontWeight: '600',\n          opacity: 0.8,\n          textAlign: 'center',\n          marginBottom: 30,\n          marginTop: 10,\n          fontSize: 16,\n        }}\n      >\n        App no oficial de las Cinetecas de México\n      </Text>\n      <View style={{ alignItems: 'center' }}>\n        <TouchableOpacity\n          style={{\n            borderWidth: 1,\n            borderRadius: 10,\n            borderColor: '#ddd',\n            backgroundColor: '#f6f6f6',\n            display: 'flex',\n            justifyContent: 'center',\n            alignItems: 'center',\n            alignContent: 'center',\n            flexDirection: 'row',\n            padding: 5,\n            maxWidth: 250,\n            marginBottom: 10,\n            width: '100%',\n          }}\n          onPress={() => Linking.openURL('https://github.com/cesargdm/mexteca')}\n        >\n          <Text style={{ fontWeight: '700', marginRight: 5 }}>Github</Text>\n          <Github fill=\"black\" stroke={0} />\n        </TouchableOpacity>\n      </View>\n      <View style={{ marginVertical: 10 }}>\n        <Text style={{ fontWeight: '700', fontSize: 18 }}>Aviso</Text>\n        <Text>\n          No nos hacemos responsables por cambios en los horarios, funciones,\n          disponibilidad o cualquier cambio de la información aquí presentada.\n        </Text>\n      </View>\n      <View style={{ marginVertical: 10 }}>\n        <Text style={{ fontWeight: '700', fontSize: 18 }}>Créditos</Text>\n        <Text>- Cineteca Mexiquense</Text>\n        <Text>- The Movie Database</Text>\n      </View>\n    </View>\n  )\n}\n\nexport default AboutScreen\n","import {\n  TouchableOpacity,\n  View,\n  ImageBackground,\n  Text,\n  FlatList,\n} from 'react-native'\nimport { useNavigation } from '@react-navigation/native'\n\nconst LOCATIONS = [\n  {\n    id: 'mexiquense',\n    title: 'Mexiquense',\n    image: require('../assets/mexiquense.jpg'),\n    address:\n      'Boulevar, Jesús Reyes Heroles 302, San Buenaventura, 50110 Toluca, MEX',\n  },\n]\n\nfunction LocationsScreen() {\n  const navigation = useNavigation<any>()\n\n  function handleRenderItem({ item }: { item: typeof LOCATIONS[0] }) {\n    return (\n      <View\n        style={{\n          padding: 20,\n          shadowColor: '#000',\n          shadowOffset: { width: 0, height: 0 },\n          shadowOpacity: 0.2,\n          shadowRadius: 4,\n        }}\n      >\n        <TouchableOpacity\n          style={{ borderRadius: 15, overflow: 'hidden' }}\n          onPress={() =>\n            navigation.navigate('ListingsScreen', { location: item.id })\n          }\n        >\n          <ImageBackground\n            style={{ width: '100%', height: 150 }}\n            resizeMode=\"cover\"\n            source={item.image}\n          >\n            <View\n              style={{\n                padding: 10,\n                backgroundColor: 'rgba(0,0,0,0.4)',\n                width: '100%',\n                height: '100%',\n                display: 'flex',\n                justifyContent: 'space-between',\n              }}\n            >\n              <Text style={{ fontSize: 32, fontWeight: '800', color: 'white' }}>\n                {item.title}\n              </Text>\n              <Text style={{ fontWeight: '800', fontSize: 12, color: 'white' }}>\n                {item.address}\n              </Text>\n            </View>\n          </ImageBackground>\n        </TouchableOpacity>\n      </View>\n    )\n  }\n\n  return (\n    <FlatList\n      style={{ flex: 1, backgroundColor: 'white' }}\n      data={LOCATIONS}\n      renderItem={handleRenderItem}\n    />\n  )\n}\n\nexport default LocationsScreen\n","import { TouchableOpacity } from 'react-native'\nimport { Info, X } from 'react-native-feather'\n\nimport { createNativeStackNavigator } from '@react-navigation/native-stack'\n\nconst Stack = createNativeStackNavigator()\n\nimport ListingsScreen from '../screens/Listings'\nimport MovieScreen from '../screens/Movie'\nimport AboutScreen from '../screens/About'\nimport LocationsScreen from '../screens/Locations'\n\nfunction Navigator() {\n  return (\n    <Stack.Navigator initialRouteName=\"LocationsScreen\">\n      <Stack.Screen\n        options={({ navigation }) => ({\n          headerTintColor: 'black',\n          title: 'Cinetecas',\n          headerLeft: () => (\n            <TouchableOpacity\n              onPress={() => navigation.navigate('AboutScreen')}\n            >\n              <Info width={30} height={30} />\n            </TouchableOpacity>\n          ),\n        })}\n        name=\"LocationsScreen\"\n        component={LocationsScreen}\n      />\n      <Stack.Screen\n        options={{\n          headerTintColor: 'black',\n          title: 'Hoy',\n          headerBackTitleVisible: false,\n        }}\n        name=\"ListingsScreen\"\n        component={ListingsScreen}\n      />\n      <Stack.Screen\n        options={{\n          headerTransparent: true,\n          headerTintColor: 'white',\n          title: '',\n          headerBackTitle: '',\n          headerBackTitleVisible: false,\n        }}\n        name=\"MovieScreen\"\n        component={MovieScreen}\n      />\n      <Stack.Screen\n        options={({ navigation }) => ({\n          title: 'Mexteca',\n          presentation: 'modal',\n          headerLeft: () => (\n            <TouchableOpacity onPress={() => navigation.goBack()}>\n              <X color=\"black\" height={30} width={30} />\n            </TouchableOpacity>\n          ),\n        })}\n        name=\"AboutScreen\"\n        component={AboutScreen}\n      />\n    </Stack.Navigator>\n  )\n}\n\nexport default Navigator\n","import 'react-native-url-polyfill/auto'\nimport { StatusBar } from 'react-native'\nimport { NavigationContainer } from '@react-navigation/native'\nimport { Provider } from 'react-supabase'\n\nimport { client } from './src/utils/supabase'\nimport Navigator from './src/navigation'\n\nexport default function Navigation() {\n  return (\n    <>\n      <StatusBar barStyle=\"dark-content\" />\n      <Provider value={client}>\n        <NavigationContainer>\n          <Navigator />\n        </NavigationContainer>\n      </Provider>\n    </>\n  )\n}\n","module.exports = __webpack_public_path__ + \"static/media/mexiquense.ce6cc1de.jpg\";"],"sourceRoot":""}