name: Native Build

on:
  push:
    branches: [main]
    paths:
      # Only run deploy if the version changed
      - "native-app/app.json"

jobs:
  build-ios:
    name: "Build iOS"
    runs-on: ubuntu-latest
    timeout-minutes: 40
    defaults:
      run:
        working-directory: ./native-app
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - name: "Get yarn cache directory path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: "Install dependencies"
        run: yarn install --frozen-lockfile
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-token: ${{ secrets.EXPO_ACCESS_TOKEN }}
      - name: "Build iOS (EAS)"
        run: npx eas-cli build --platform ios --non-interactive --auto-submit
        env:
          EXPO_APPLE_ID: ${{ secrets.EXPO_APPLE_ID }}
          EXPO_APPLE_PASSWORD: ${{ secrets.EXPO_APPLE_PASSWORD }}
          EXPO_APPLE_APP_SPECIFIC_PASSWORD: ${{ secrets.EXPO_APPLE_APP_SPECIFIC_PASSWORD }}

  # Android build and deploy
  build-android:
    name: "Build Android"
    runs-on: ubuntu-latest
    timeout-minutes: 40
    defaults:
      run:
        working-directory: ./native-app
    steps:
      - uses: actions/checkout@v2
      - uses: actions/setup-node@v1
        with:
          node-version: 14.x
      - uses: expo/expo-github-action@v5
        with:
          expo-version: 4.x
          expo-token: ${{ secrets.EXPO_ACCESS_TOKEN }}
          cache: true
      - name: "Get yarn cache directory path"
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: "Install dependencies"
        run: yarn install --frozen-lockfile
      - name: "Get Google Services key"
        run: echo $GOOGLE_SERVICES_BASE64 | base64 --decode > google-services.json
        env:
          GOOGLE_SERVICES_BASE64: ${{ secrets.GOOGLE_SERVICES_BASE64 }}
      - name: "Build Android (EAS)"
        run: npx eas-cli build --platform android --non-interactive --auto-submit
